package project.gui;

import project.ss.*;
import project.ss.engine.*;
import project.ss.xml.*;
import project.ss.exception.*;
import java.io.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.datatransfer.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.sound.sampled.*;
import javax.swing.filechooser.*;

/**
 * This class provides options to set the Voice Files and Dump Files.
 */
public class TTSOptions extends JDialog implements ActionListener
{
   private Synthesizer synthesizer;
   private JButton bOK;
   private JButton bOK1;
   private JButton bOK2;
   private JLabel lblDumpFile;
   private JLabel lblVoice1;
   private JLabel lblVoice2;
   private JTextField tfDumpFile;
   private JTextField tfVoice1;
   private JTextField tfVoice2;
   private File DumpFile;
   private File VoiceFile;
   private File VoiceInfoFile;

   JFileChooser fc;
   /**
    * Creates new form TTSOptions
    *
    * @param parent
    * @param modal
    * @roseuid 3B06A61702F8
    */
   public TTSOptions(Frame parent, boolean modal, Synthesizer synth)
   {
        super(parent, modal);
        setTitle("Options");
        initComponents();
        synthesizer = synth;
        fc = new JFileChooser();
   }

   /**
    * This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    * @roseuid 3B068BFD03D6
    */
   private void initComponents() 
   {
        lblDumpFile = new JLabel();
        tfDumpFile = new JTextField(20);
//        tfDumpFile.setEditable(false);
        bOK = new JButton();
        lblVoice1 = new JLabel();
        tfVoice1 = new JTextField(20);
//        tfVoice1.setEditable(false);
        bOK1 = new JButton();
        lblVoice2 = new JLabel();
        tfVoice2 = new JTextField(20);
//        tfVoice2.setEditable(false);
        bOK2 = new JButton();

        getContentPane().setLayout(new FlowLayout());

        JPanel contentPane = (JPanel)getContentPane();

        lblDumpFile.setText("Dump   File   :");
        contentPane.add(lblDumpFile);
        contentPane.add(tfDumpFile);

          lblVoice1.setText("Voice   File  :");
	contentPane.add(lblVoice1);
	contentPane.add(tfVoice1);

          lblVoice2.setText("Voice Info File :");
	contentPane.add(lblVoice2);
	contentPane.add(tfVoice2);

        bOK.setText(" Set Dump File  ");
        bOK.setActionCommand("OK");
        bOK.addActionListener(this);
	contentPane.add(bOK);

        bOK1.setText("Set Voice Files ");
        bOK1.setActionCommand("OK1");
        bOK1.addActionListener(this);
	contentPane.add(bOK1);
      /*  bOK2.setText("  O K  ");
        bOK2.setActionCommand("OK2");
        bOK2.addActionListener(this);
      	contentPane.add(bOK2);
        */
	setSize(355,150);
	setResizable(false);    
   }
   
   /**
    * To capture the actions generated
    * @param actionEvent
    * @lingu
    * @info
    * @roseuid 3B09BD0701D9
    */
   public void actionPerformed(ActionEvent ae) 
   {
      if ( ae.getActionCommand().equals("OK") )
        {
           int returnVal = fc.showOpenDialog(TTSOptions.this);
           if (returnVal == JFileChooser.APPROVE_OPTION)
           {
             DumpFile = fc.getSelectedFile();
             tfDumpFile.setText(DumpFile.getAbsolutePath());
             synthesizer.setDumpFile(DumpFile);
           }
        }
     try
      {   
      if ( ae.getActionCommand().equals("OK1") )
        {
           int returnVal1 = fc.showOpenDialog(TTSOptions.this);
           if (returnVal1 == JFileChooser.APPROVE_OPTION)
           {
             VoiceFile = fc.getSelectedFile();
             tfVoice1.setText(VoiceFile.getAbsolutePath());
           }
           int returnVal2 = fc.showOpenDialog(TTSOptions.this);
           if (returnVal2 == JFileChooser.APPROVE_OPTION)
           {
             VoiceInfoFile = fc.getSelectedFile();
             tfVoice2.setText(VoiceInfoFile.getAbsolutePath());
           }

           if( (returnVal2 == JFileChooser.APPROVE_OPTION) &&
               (returnVal1 == JFileChooser.APPROVE_OPTION)  )
            {
              synthesizer.setVoice( VoiceFile , VoiceInfoFile );
            }  
        }
/*      if ( ae.getActionCommand().equals("OK2") )
        {
           int returnVal = fc.showOpenDialog(TTSOptions.this);
           if (returnVal == JFileChooser.APPROVE_OPTION)
           {
             VoiceInfoFile = fc.getSelectedFile();
             tfVoice2.setText(VoiceInfoFile.getAbsolutePath());
             synthesizer.setVoice( VoiceFile , VoiceInfoFile );
           }
        }*/
      }
      catch (Exception e)
      {
        e.printStackTrace();
      }
   }
}
